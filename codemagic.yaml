# Automatically generated on 2021-07-15 UTC from https://codemagic.io/app/60eec4fb6a1e97e73bd03434/settings
# Note that this configuration is not an exact match to UI settings. Review and adjust as necessary.

workflows:
  dev-workflow:
    name: Dev Workflow
    max_build_duration: 60
    environment:
      flutter: stable
      xcode: latest
      cocoapods: default
    triggering:
      events:
        - push
        - pull_request
      branch_patterns:
        - pattern: dev
          include: true
          source: true
      tag_patterns:
        - pattern: '*'
          include: true
    scripts:
      - |
        # set up debug keystore
        rm -f ~/.android/debug.keystore
        keytool -genkeypair \
          -alias androiddebugkey \
          -keypass android \
          -keystore ~/.android/debug.keystore \
          -storepass android \
          -dname 'CN=Android Debug,O=Android,C=US' \
          -keyalg 'RSA' \
          -keysize 2048 \
          -validity 10000
      - |
        # set up local properties
        echo "flutter.sdk=$HOME/programs/flutter" > "$FCI_BUILD_DIR/android/local.properties"
      - flutter packages pub get
      - flutter build appbundle --profile --flavor dev -t lib/main_dev.dart --obfuscate
        --split-debug-info=build/app/outputs/symbols
    artifacts:
      - build/**/outputs/**/*.apk
      - build/**/outputs/**/*.aab
      - build/**/outputs/**/mapping.txt
      - flutter_drive.log
    publishing:
      email:
        recipients:
          - brennercsferreira@gmail.com
  internal-testing-publishing-workflow:
    name: Internal Testing Publishing Workflow
    max_build_duration: 60
    environment:
      vars:
        FCI_KEYSTORE_PATH: /tmp/keystore.keystore
        FCI_KEYSTORE: Encrypted(Z0FBQUFBQmc4REhJZjBBYy1FVGptcUtJM1M5d3h3NzFmMkF1dWNOc1lXSEE2Q2J3UWhOVGRpLXNRSXVaT1BOT3lhSFMyNU52TmtDQnk2VDltaURIdExXVWpuUjRVcDVKTWtYX2gtWDYycERXUGNVQWswR2tuaHZpMW5VdXpnQUJfVzkzaDhNTTZtZmJXUUtSd1QzcmNjZlBFSklQS1BWVXdCLUpaVmw0ZG9acWRhV1RiOGVTUzhfX0g4VFZSckR3YzZmVmVZUFc5V0U1bnR1N05VZVNjSjcwM1FNMFpVS1JKOUVjY21PYnd5TU1PUDZBV2prMTZ4WXNUVDNfLUhCOVlyUURKYTg0MjA1QkVwRnI3ZTFyXzJzSk1rOHhlY0Zoa0RkYkYxaWgzWG1fNXVJTWJjVDlXdUJMdlg4UUpNOVZpUlI0NVVSVEowam45VkMzbGRZcnpLWlBNWDJEOVhBbnVaYXpBNzc2OUc1dXZlTS1KbXo4NEhQZjJKUUdwVnNxWnRUMExVblVCQkdBUkZOSGhCN1FZdmJjNGJoUU5wZEVIdW5vUDlYUzNBTWZTb1BhYy1lTDQ2SVNtSVE5UkdpcGsxSUE2YXh2am5xbDRvSWk3SEttTFRVc19JRE9pWDBkTG4zalYzOWl1RktONmVUeEJ5blR0YXh2bnJ6bHA3QUtzclB4SEJ4ZFFtckEwSy1Ia3BuS3ZHMHJub2gzNFlaVTlWZURhN2JnSDBldGk0ZkJ4OWtFUHZUXzF4dlV6THd0aGlVV3NFX3RDVEdHQkNQNER6SGNrMDloSEE4RjZBY0JBbG8zQVgzcS1OclVpZ0c1SE1rNzZTX2NhMnJxcGJrNGpGdnFpQUpOTmJIcnhYNzlfckR0RXNabWh1dll1LXZ4WG5HUnd2eUN1Q1dwbkdva3U1YWh1aFotdVQtT0g0ZlZ5LUFzclpTWHNTY2U3bEhETTNKcF9yQ2pDQWlTTWpiblVKOFFWYk8ySXNGRG1UcXF3bkxCWnlyeTlxVkFMZGlZY1lXaDZWREtaY1o4Q0hwM0ZFRk9LeWdlalY1Q2pPY2ZBd2N5Qlp3Z21JeXVNYjBPbGdINEpISHZVVUtoRU9uMjcySVFDQnAwYXZZVDhvTDEzZkNmbmlycDIxSU9xUHMwdi10bHpBNGtYMXpCVmJsVDlpX3FJY0JPYzRGYXVzNmJ5ZmZVcXdpUkdtcm9kZDhmck1OYjBZRkxZbFl4U2VKQWlvQ1BfSFo1QmxVOUtjOHRGY1BrMk5xRXdQX2xDMkJScmJWc3BQSU9ya2Z3U05DZVd0Y28tNWFYcXlrRWEwaEFybkVocjNMU1NtUnliamVEekxMeTdqc0liemhFaExzYmRXVTF6M3JJcHIyazhxTXlmQ2ZEODVwNXk1QXpSSGt2ZUY5TkFLdzlDOS0tSDVIRk05dUVxUzduUTlYUk5TbDVFMWliM0IxbTdKWldlVDYyek9GVmZKYi1zckpfb1Z0czZ4Z3NnX0s3R2NnQjM0eENtRmxkZ2x5UWUzNXpLS0drbjAyejQ5MWxIS2Fjb2F0N29SLTJkR0JXNllSMGgwQTQ4Y3IycHh5TWJKd3BUX3BSdHhDelB4c2NiX0hhOWpnRVNfR045QkozRkFQWHAxQjNtYWNXTm5WUFdLam9zV210T09OR3dncDR3VUF6alVjZ0J5bXF4Y2RDOUxHZ0NFNjhGTGM4YkF5bS1lNnhJTVpjUWxkbmtEWko4YlU3WnRaX0xhVGZtVEM5Y0Q3R21WZnZzQjRleWJ3bmJaNFVCTnI0WEhXQkJqbTJZcVRPS0Ntc0p2eG5zaTZ5Y1hHSTRWNnZsa3VnazBVLXNtc3A4TW02eTRwLXl5WU1Ld2JoN2Zxa2tQbVRhanRtSW5YS1BMVlJfWlJZX3NUMjBEdWE3dHdSYWpSTUVnTzZmUXhLaGk2WmwxX2lrOVFxcmk1MFpSajdKSm0wRU9XVEIyZHdlTXh0eDk5RW1KMzlBZUtfTy1ZdHZoWTY2WW94bklhNlRtblZ5UDhteFlyNWxXd3l4UkU3U1JZZ1VlQ1lXOHlDb3ZBRk1BX3dZbzZMSTk4ZHQxYjN3V3g3d2lsYW9mQkx6ekVURGZLQnNia0E3SURWMXZ4MUczTk1OUHRaLUFuZlRoVVJFNjZaVTdpYU13NlYtOFlNRG9MamV6ZV9adDdLZ1hERjNtZkVKOVVaRlVLbHFPaDE1UjlWRm9iQWU0VFhuZTJTNnlDSnB1NWM4YWFmYzFnZ2hMenRBNU1PclAzV19yZ0Q1Q2d5dXY2OTJ2Ry0zc0V2Rjl1WUQ3NW9nUTVZTTU5cTBhVkpsRWlSVEo4QWFuU3JrQnJUcUlkQ3J4OUFKay1RbHpubk9reF8xcmRvbU5oT05BSFFPb28xbDZaeGlpTjdKQXVmc3g5TTRST3dRcXBWUzIzcUhSQ0ZLVEhZLXRROGRyYmhMTG9KUEY2RWZpMTlzREFVRzNIZzRzT3RIRk5RSlAzVmQ1OGRDNmE0djFpYlZud3VFejhwdlY5cVdGUW1uakR4UmtfamFzYmRFaHloMk1fbENXVXNKVnVrcmx5emdUMjlUM0ZKWTQ0dzRmRldXZHIyV3ZvWUZ1ZHJyUjRwSm1pZ3Zzb0VYcmVfU09uSFJncWlpZXp3V1p3ai1qTl9ocHYwd0pTSDZWeWZkU3lVUXZOVmxYdXE3Z0xZeWVTbTl2d1MyaDhQM09YYzViaEprSmp1YXhqRlZGUHF4dnNMbXppM0FKb2pwRE16c0dkSjA2QTRxVXVZOWlEaFB5c3otNk9JZmd0YmRkd0FtYWR6eU1udU5Tc0RZZ1BwQzI4WkY1QzZQeW5lRmpQTGZycGFLZjBKZU5qRUhpN01qTGQ2c28tN0ZqeWJfN1Bra1FqcG1BYkpYRzBFT08yRmx4MWxFRThKbktQT3VFaUpVeHBLT053QmMxTVBabVdVQVFWY2V6cjVZbVR4eEdLeHI3RTF3blBqb05OLV8zQnRJV1JHLUpDMjVKdVNoaXJ4bjV3MHdEUjg0U2pMa1pOSE5sQnlGbUtaSE8tRDQ5Umt3RVBVRkdObHh5M3RBcno2bktxZ0VEeXdlUUdiVURWdnJjZ2R3YkpZQXQ3MzR0end2cVJYMy16U0JqcUdYYW83UGQzcXlOc0h5VU43bjJidE9YZ1E5ZWJqaVhVbnpFbG9ENHA3STNDREdMRHZkM0sxTDZlMWcxMEdvTDBSVFl5bURjZmlyMEI4RXF5MXZ3QWtPZHYwYjNFai1yZEplNjRHZ2lqSjM0cHc5ZFdXSkNJaTQ0Q2pNMHBKREhQMEZ4TThsT2R1dXB1UW1iODBCMWtWaHBNSVYxV3B1VGRsUktKMDBLQzgwTmpsTDJ0VloxbXZseVBSYVpMdU5RNjJsbGNiZFIzRlprTzg5a19uN0E4WkF4bEtpZEpWakE1ZF9QcFF2T01PZDdHLVRHbHAyV01JTGFJYi1qVWpXTjNGYm1WSE1EUVJlQVcycl91dk8zOHpDVVE1clRNUzhLdGk0czAyMUY1RXpCdUZ6WHdZMC1ORHVpbDZXczM0OGJFWVVXQ0lMLXlXeS1TUVBPb2pCeWZ4NTN2QW56c1dpTjZ4Vkwzc0M3d19ZZkNJZlRfWmZaTHlwUjcxREpaN1laWmZmVklRc3NCN29yRFZKQmtzbWU4dVVqd0dfX0xOUk5mbGlpXzlZaW56dkdWUVdsMFZfN01aZTBrWGZjQnVaRGRVMFEyakJSeFJkNjVaRmRTZ3I4VmxCV0l6RGotcEFjM0oyWXZZdE5ERUhVV2d1bElydWFoc2tETDhCSVZDM2F0U3lETDhwVktnaS1vRWUxWXowUG9VNWNfU0NnblBQZUtDdzNhMThkNmM3cFZZcnc3NFptZGFXNWJldC1Pci1nMjJIcUN1QXJFcUdWVXlUeEF0QTAzZDhSZU44dXMwOEllZEs3VGxZbkVMQmYyMEhxUzZjMUpVOUhSR3JIWEROX3JwaVU4dk1oVFFCZVliYmloQlluVHk5LXlHYUFHNHVMb29QX1hfWEFGZU52SHRrTHo3M2dDRGxzNUI1blJiNFFjc2R0THVXaXdRMFg3bjE4eGE4QzRxaEhFd3VVX2FpUzZXUHpXWnV4NktmTnJtMVQ4RVJXRW1VTnFZS09TbmlNR0tRT0FzTDh5TzFPMjE0VGpUZldPblJkZHc2U3U0VkpmWlozRFNrSjhTU3FXdkp0bUlXWEtnNXd2UkNmeFlxTGIyWENpclpuYXBCcDBmcGU3RVdpeG9pekFzcWs4LTVOcHM0ZDdRdWFMd25mMXJhS0NkQmsxRFptVGx0ZkNGSG5XS1RTeUtNd3M5RS0yUmpkY3p1WC0zOUs4cVdZQmI2ZktXNUlWbDhDODdaNjFMQm5VZW1wOHRUcWpUQXYtR2d3VHBWQk1ZUTU5SktnR2RqU185WHd3amJUTlFYQXI5VzNxbDBCd2V5NTV5bVA4enpJV25mVjNuN0x2Y2h4QnBpelhheGZaVUdFR2VzZ0tYdjZmclJZNXBtOW42VW5OcWtHTVl1RXpJU0RzVm52aWRDcm1SR002YkdKNVRUT2l3OUV0eDBkYXZ1ZnhJS0oxcE9mcDFUZjZLb1FJTlhVaklXcGJGQ0F3V01zTWVWWW9oZlo5UGlxWEZ3UkxHZjlVNVU1YW5pREZhdFFLTW1qY0MwYWdQbFBPc1RnUHgxMkpMcTE1WHpoQlRhVGhGTG82cEdDb2VJazZveDRjT2xteXZHdjF6a0dnZEdMMVB3TjJpMlFldW4wbUNFNlpUbHpDWTloazVPXzJhV2NUY0VJanlqaHpJbnRESS1KZ2lMaGVYb21rM3hJTUtHcDk5UzN6Y0h4eE5iWE4xcmxUMk16Y3VlbEV1dUg0ZGNUUXBWM2hmaXVScGk1RU1hOXpHZTBXcWdwOGpNMUFHM3dCMUVyRUNXcjlfRkVXM0tSOXlFaUxYTmFSZ1RNMmRWY1pMUkh1MmVqN29GRzVzNzltMGlaZXFReFdJSUdZSDM1Qmtpbm0yaUM5elVhTkVNd01vN2NkSjB0QmtCTjBZdl8ybGV4XzY1MGJXenBpa1NuS1FhOGFYTUJ6TG5rWThIaTZ0aHV1MEdvc0EzMUVkZWZndi1MZ3ZfcWc4N0piZ3BucWdGUklTcF9TMXUxZmR5bjdLRkVyc0RDS2w2cGZ4NENYX0dQb2RHaURNRGFSOVIzZGcyYjF1cld6STBlNG41dm1GUUlHTEw3TnZUeXhCY2w0cW1rTmNibHZUUzk3MUExYllXQlhkenVmblRGRms1czZ6ajBhQnpnaWRZMDlTRlpUR2w1TVpDWVAzX2taUG1odi1WTzlGSWVkSUt2MDhSUS05RTVxbGtKb1RobDloNDBndThGbzdxdFg5Y0RJTE9VNFNQMDJ4RkNFcWdzamJWeDZSYjdvY05ReEpOTWE0OC1Ua2ZiYVNVXzJJTFl5LWNyQTEwNmtmdHpNdVZaNTF4R3h2aklIOWJ3OEd4TnpMU1hKYkxhdlU4N3FYamtJWmUxcDVNQ1Z0a2ZQb1NyaUlfQlAzb3dXUk1tcmVFNy12U0VYNWhNRkhHN1JPZkVwQ2pqX1JabzRWLVhDaW9NdmgzeEdURjRfeDdDUzdGTmhZMGVMWVN6dXhiem1rZjdISzBScmpsdUVxWjhrUUY4UGxFdFNVdzd5Q1djUEM2WFZ5NmVJMUU0T1M0TWJQU2dQWlB2b0RKY1d6aHdNb3RZQTR2TVdBR0RjOUJyV3BQZ296U0xkLWZ1UG1udkZObUthZWY4T01uOEFGT2JMX2o4M1F4VXhpY2tyaDAzZEZTRldXVDZsMFV6a0tXUkdiaU9zT2FIQllBdVVyVFJ4Z09FcUFLbXQ1RWlNS0lObTE5N21XNWlQNkR1T0t4NDlUQkVSR2tTZHI5elZwUnZ6dTYzVjNNWkRYTE9pcmVWTFpETFFRMzF1ZkwxdWRNdVpzZUV6QTRGMFJfdk5ad09Hd2NFNE5HZmVROEJpSF9PWUR2RGJWOTBxQ3RYeHo0VmlXNDVEZEl0VkEwZ3lzNHdkZHp0OGlvbTdocmthUXkwVExOU081ZDNVTkZOWkdWVlJYNmplMFNyWUtqQWJHOHJiNXJuUVNDSjNqZ1JKV2t0ZkR6dFFQQW94dG01UEItYTdfNWc2VXVvM1pIaTFyQ0VfMnRFMmlTckhIYlF4N1VsVEFraHVDdENKbDlkbUFhRlhZU2ZYSjFVc0J1MlVveFNqcldCbURLakF0RlZ5M1M2YkFpSHNNMFQtdnJHTjhyUkxUZm1FdTlaZUdhNFltczd2TDdjMGVDMHRYUFp6Qkg0dGVENzBUSUxyMmtpdWZORGNSU0hjN2Z3NDdTTjY0aENnPQ==)
        FCI_KEYSTORE_PASSWORD: Encrypted(Z0FBQUFBQmc4REhJRUlXVlZUZHZvclVtT0FLelkxSFJvUU1YRHlBSFlYYVBEcEtsNWlBajJwMmx4MGxIRWpVNVNrUm5HSUctVUxlQldJN3hNcU43dncwNDJmMFdlejFwZnc9PQ==)
        FCI_KEY_PASSWORD: Encrypted(Z0FBQUFBQmc4REhJR21GdHJscEprZC1SMGd2UjAtZF9SR1o2c1J1SjdIMXgxUEc3LXgtVlJCZHpkTHNSWGVhMWc4SU5mSGJzTzU5dGRaMHBMN091SVFBUnpaYXdReFQwcWc9PQ==)
        FCI_KEY_ALIAS: Encrypted(Z0FBQUFBQmc4REhJTUJ0cFRqVmdyeEdWX0dKRmd2UVNvOTdiMU5OeHN2bGM5ek9aQy11aWg5a1lPQUdZOXA0eEQxa1RWSUpyQ29nckhFbG1RRkstSUs2WEo2LUZBUkpLOWc9PQ==)
      flutter: stable
      xcode: latest
      cocoapods: default
    triggering:
      events:
        - push
        - pull_request
      branch_patterns:
        - pattern: preview
          include: true
          source: true
      tag_patterns:
        - pattern: '*'
          include: true
    scripts:
      - |
        # set up key.properties
        echo $FCI_KEYSTORE | base64 --decode > $FCI_KEYSTORE_PATH
        cat >> "$FCI_BUILD_DIR/android/key.properties" <<EOF
        storePassword=$FCI_KEYSTORE_PASSWORD
        keyPassword=$FCI_KEY_PASSWORD
        keyAlias=$FCI_KEY_ALIAS
        storeFile=/tmp/keystore.keystore
        EOF
      - |
        # set up local properties
        echo "flutter.sdk=$HOME/programs/flutter" > "$FCI_BUILD_DIR/android/local.properties"
      - flutter packages pub get
      - flutter build appbundle --release --flavor prod -t lib/main.dart --obfuscate
        --split-debug-info=build/app/outputs/symbols --build-name=1.0.$BUILD_NUMBER
        --build-number=$(($BUILD_NUMBER + 100))
    artifacts:
      - build/**/outputs/**/*.apk
      - build/**/outputs/**/*.aab
      - build/**/outputs/**/mapping.txt
      - flutter_drive.log
    publishing:
      email:
        recipients:
          - brennercsferreira@gmail.com
      google_play:
        credentials: Encrypted(Z0FBQUFBQmc4REhJd0pncWpEbXFJZE1vanltNFhhNE1RbEFsM2VSTlA2VDk0WHduc3JzUldKVVBpdDB4aWlJVHlfOUFNUWZzWWs1bWpfNHR0QUk1RXltODQtcmZpd2ZDaW85UXFiTlVhSjhwRF9xT0xrVFdfRlNhWUNmWFFEY1pvenFZZTlhUDRHdzc1NDVKNjg4Umk0dG9QNjFhV3czaDdsYVNWZlR0NDNaSkxkWmxTRGYxeVQ0RWc0VVdOR0otSW5VMGFiTkw5RmJweFJWdktnZmRmVGljdlVYS2E3VmtxRmFkVnRNLVBoNDRLeFJsdWZmZy1FVk5HMTd2bEE4UGtNQWlDNk5VREE3STdndU1lQkRuZTJKbDVyRjcwc0xFZmRydl94Q216LUtvSU1DRTRuWTQyVUxOblRsRUdEZkJZSXFaMFRmY18wVlo5LXlOSk03UUR1WERmOVplUjJIZzhUTmxGLVhYN25OdHJ5bmstU2JKUDhaelk3M2pLUF9oVmdleEFZQTl3Z3lVV3VxOC1xZG03TW9yRFVQbWY0cm16WnJiZ2hRbFlKNHhhajNGcnVZTzVPaWpsOXB3T0VySE8tT3BPS1ZrUmcyTTgwM0prNzlKMGdjbFcyanJtWHIzbFJBMVBFUk1qMUFVbFVYN2picElmYV9ocVRhTXNKbWM5aWh4R1dRb3hmRjRFOExZZUFFWjhsa1R1cFhlMlZaZDNWbnVIbmZudVhUa0xISXN4XzRQSXNjTktBNlAyNjBZWTJVU2UwY0t2NzM3MnV1Wlh6c3FWNkhtSGlxLVB6dWNMZW9Md0pzT21yUDhNZUxLWS13RzNlTWhJS1RSZ0hYWV8xMTk1TmRmczg5b0RwWGpmakJiTFhhUnYwNWowWjBiaGFIclRkSkRXOTI5ZDByWnlRU0pFSzZvQ0hvNUZ0ekFvaVNIUnFVR3JWTF92RzFpbi0xRXNkUHUwLXREZnJDWE45YnY5SV9xeF9kME8tQUU0MmtHZmQ3Z0pFMkdDVTBpNFFOVnJQWFhucDhORUtaRnA4d1RHUHJ2aS1lRC11T2VPc1d0R1J5b19obGg4MTlmZVl2Q0pQNDJOTDZ2VUJrLTRzMXJ4YU9wRkxkTVc4cVFpUjNudjctV0dmSGlSSFJRZWEtN0sxX3YzQmdQY1pLaVc1UXgzNFAxREtHd3k2NGp1VWpXSGhNb2UyVVpBUFNPN3BtSHRPSkwxT2ZCUkkyZjA1NTRLQnlfem9kWFc1ckFiOXp6OTRnZWZMZDBRT1poT0dadlRFc3NoZzFxci1CSTZIYnNwcXphMTZPSmt1ejFUMG5sRTZoZmZZbkpfTDhqQlJkdlRSeUdKdEZIN2hqbElKczRWR1lEbm9NOFgzUjRsZW85bkdGbnVtdHVYM2gyeWUwZXJETmtjVEtJclRsRFdyZVllOTliWHQ1d2dPMEdHeHI4eTBxRTdTbzBOallrcUdSQmVnNHlha1JjT201TEhkRHhrZmR4cVRVTDEyRmo5bmVJVm1uR3RUal9ZVHZlcWJ5N3M2SmdtekFwVzBXb3Qzal9CNVdmZ09wQ1BNZlFsU244NzlHVUZtQi0yOFpVSjE3dDAzT1BXRHNHaktRVkljX1FrbWUtVXl6SWExWFhNX1FaYVdyek4xVkliLW1jc0cyWnRlcjljSk9id2Z2UDdEbkMxRFdKVlR6YjhId1RLVGlKV0xCdzZqdEN2eGhZaXFKSU5XMXpYS2doYzlhNTlNc01mYmxwcXdvN0stQ0p6QmVMRDkwUFhENGdoRWRYQ29sZ3ZMOXdHSTMwaTNSSEZ0ZjRuMEljMEl3OEpNN010VDdMdWYxYm5QdDZFLWJqZU9sZlEtRG4yazR5dzA3R3RWUDRGWEZOVVBsM2NPdW92Vkl2WEpVM0U2bURKZjB4Y1dISTFINEhicnhTMHRYWkJBM21kWmFTaUFoQzB6SERkOXc2S2s3bTZ2dHV5dG4tcllNOWtFLUh6c0ZwakNETnR1NVNfWlpXeV9ubFpsT2VPcm1GbE5TMHVoLUZhRWhCRTdVZ0REMWQ1NDRDcXFURkZJZ00wY1ZCZHd6N2dvaG1SajZQLWJ4ajBwc0t1RmowbXNTZEwxWlA1cGtBazh5ZDRGWUxVaXlqNkotYjdVWmd2QUZSeEFKclRLcGV1eDBwb2xRQ2hUanBRNjR1ZnpsLUxBc1A1WGUySmk0YW4xNlJ1VVdVYmRvdFhPQWM4RTk3ZW1ISUVQZkNGVmJueVRzcEt3clN6R3lYN3RtQmRUV054MWtoTUpaWmhtM2pWakw2TDAxMFJIUGJjYnpRZHVHMUZvNFlQQWpJblRybEdPX2d2YzlPRllFYnl3VHc4OFA0R3I3OVhBcU9ySTItb1d0cHprUmc2eURYcV9RUFY0T3hfVG1zV2s3VW9OZnBwaEVLVEtCU295dFZjVjBfSHZnbnNpdUFFbDhmR1BMVG5FMTYzTWxCSmFDSTR6YXdNRzhZOTByUlhSbjJGZlZ5VDNQWXJSd2drczZ6aXVQbTY2TG45ck5pTU12X3NNQXNycE9ydlJBQnlfSzhHMHNRMGRGVWF3Z2dyX1Y1ak9jTm02SmFTSm5YTTlmWHlUMkZ2Ul9iOElqY2p5dmVibjJmeHN5UmxsY2R6algzUzRRWFI3WE9xakp5b3R3ZklNUHV1eGgwRWdKQnl5WjVtTW5wcjBzc3RLWk5sX0FNWVpYdDNvVENXZnRTMjNrUHAwSk9UZk1tUlVYQ3Eyc2VmX2diQ29HaGkwQTNjcEl0X1VhcWV1T29tbXU1VWxmWGk5blNKVUZPWUtzdmRhN0t0SkpOMmdIczlTb3hTbEVoblRHQVN0Q290a3FiSlJhMkpRTFdVQmJCMV9BOFhaZVlsOURENG51YVJiQ0R5amYzTnpDcnA2dGpzcHktZXJMWmw0OU1WaERhT3hrcmVXMkdlVTIzcTBTcGRVNXR6OEpSRHh1QWU1b1h2WkZOc3NyOEtwdnZwWFM4T3pYTm1uNF9xSVNhRFR2azhWVDBVUVc2UWw5ZnJtVUpJS19oLXVDS0hKSFdWLXFWZHp1Tk83R1NIT2ZpRkhTNk5sdzFqRng3VG50bE92dDlXMW5nVDJ6MHlRM1NDTmNiazBaU2RaUEFoQnA4U2RxbHpJc3pXdGptczlrMFlpRDdQZDJsbktUUUdJWk1fYmtaN1ZPVXdMYTRTZHNZRXNBRzZZejltWV96azZlbFpDM2M5S3g0QXpIdmZSbEktMGtoNTAyS0ZPb3FCbk5FTkhud191blQ1SllTZnZHcHA5Y1FUcEtJbFVmNXhUUzN6MEtXNWFNQU0tT0lxc05tZDNqR012ZGY4YXJfWklyTnNrRk03TllfQlA5TXpfMjNJaDctbWFTWmZpM0ItMEV4UkNaaTl0VHNNemlzQWd1V0hLWHFSSU44QVNRS1dqWm9MQXgyZjZNS3k4Z05jSFhhYndOQU04VzkxMXpwV1F1N3BiemlvaXNJUnhiS1hqOElUeWkzeWpSNFg0V0ZydTdUd0tLVnhXRmY5dVlvVnNpN2RDR0tYQTN2UXVSRFE3ZTJjM3cwdWZ5SE5OVjJYSjUtYTFUNW1RaGthaVQyZDNGUjlGOTl5SExiUmFaeFQzQmVXQVBqR2UyTEpxbVU3TlRsNzZ5bEVQdHBnMTY0dnJhZGtvdmVTR016WElrOWp1T2Q3ai1qUVdSTmxFcGRQYnN1VklSNkVjSm9uTXFod2JRTnowUWhFXzBQd0tSRENsTWxJQ004QTV4dHRiWG9EYlFjbUZkemg5elRMSU9iMklQc1YwRUhOVlhwMml1TERfTFljTGpZWUNRTVBrWThoMzI2U0dyUk1VNm9HRWkxNmk0NVdQakdwM0tyemJuQXRzdF91R1FYU1pXc3JYRXhGWGs4bDlTUVF5R09VdHNKQm5pbzNrYVJybGJNeWZDTXZQcUJ2NjdLWm5TUzNyQUk3R3UxTmV3bkNNaW5KanRNMlJiNGlUR2QzazV1SGxxX1VQZjI0bTEzQU9xbUh2bkt1Z1dVTTVaU2RZRTB2SEtPemxaN2VzNW1YR1c5YWZfWmIycFcwcXd1UzlLZDAyZEJrNHhrZXFNU3ktUF9mdWxRMFFKQkx5dG9GRFE1aXBYOEtzM19tTW1TTGdoa1dYZUpiNkJaYnV4UU9ldy1ZbkJ1OW9ZMmk1N2JGaWw0WnRnTkVDN243c1VfaHZsRmR0T19ub1EyOHJVSnRFcnBQR0pqdnh3M1FrTUpkTldQdW53SHJkYy1xWkwybkFTbUdQRXdEVDJnRWhYSVJ3ZkpWNWxJNmhqLTFOM1dkSW5hdVZzPQ==)
        track: internal
        in_app_update_priority: 0
